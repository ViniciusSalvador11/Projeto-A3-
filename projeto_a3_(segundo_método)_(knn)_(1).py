# -*- coding: utf-8 -*-
"""Projeto A3 (Segundo Método) (KNN) (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13nq_8jNXKRHK-f9hAWZzXX3IjNTydMyc
"""

import pandas as pd
import numpy as np
from sklearn.neighbors import KNeighborsRegressor
from sklearn import metrics
from sklearn.model_selection import train_test_split


df = pd.read_csv('winequality-red.csv')

df.columns

X = df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',
       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',
       'pH', 'sulphates', 'alcohol']]
y = df['quality']

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)

model = KNeighborsRegressor(n_neighbors=3)

# Aplicamos os dados de treinamento ao modelo
model.fit(X_train,y_train)

# Aplicação do KNN Regressão ao grupo de teste e cálculo da precisão
precisao = model.score(X_test,y_test)
print(precisao)

# Cálculo da precisão com formatação 99% ao invés de 0.99
precisao = str(round(model.score(X_test,y_test) * 100, 2))+"%"
print(precisao)

y_pred = model.predict(X_test)

print('MAE:', metrics.mean_absolute_error(y_test, y_pred))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))